# coding: utf-8

"""
    ibl-data-manager

    API for iblai

    The version of the OpenAPI document: 3.54.3-ai-plus
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from iblai.models.document_search_response import DocumentSearchResponse

class TestDocumentSearchResponse(unittest.TestCase):
    """DocumentSearchResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DocumentSearchResponse:
        """Test DocumentSearchResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DocumentSearchResponse`
        """
        model = DocumentSearchResponse()
        if include_optional:
            return DocumentSearchResponse(
                results = [
                    iblai.models.document.Document(
                        id = 56, 
                        document_name = '', 
                        document_type = '', 
                        access = '', 
                        training_status = '', 
                        date_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        last_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        url = '', 
                        metadata = null, )
                    ],
                count = 56,
                next = '',
                previous = '',
                current_page = 56,
                total_pages = 56,
                facets = {
                    'key' : iblai.models.document_facet.DocumentFacet(
                        total = 56, 
                        terms = {
                            'key' : null
                            }, 
                        other = 56, )
                    }
            )
        else:
            return DocumentSearchResponse(
                results = [
                    iblai.models.document.Document(
                        id = 56, 
                        document_name = '', 
                        document_type = '', 
                        access = '', 
                        training_status = '', 
                        date_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        last_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        url = '', 
                        metadata = null, )
                    ],
                count = 56,
                next = '',
                previous = '',
                current_page = 56,
                total_pages = 56,
                facets = {
                    'key' : iblai.models.document_facet.DocumentFacet(
                        total = 56, 
                        terms = {
                            'key' : null
                            }, 
                        other = 56, )
                    },
        )
        """

    def testDocumentSearchResponse(self):
        """Test DocumentSearchResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
