# coding: utf-8

"""
    ibl-data-manager

    API for iblai

    The version of the OpenAPI document: 3.54.3-ai-plus
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from iblai.models.mentor_eval_report import MentorEvalReport

class TestMentorEvalReport(unittest.TestCase):
    """MentorEvalReport unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MentorEvalReport:
        """Test MentorEvalReport
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MentorEvalReport`
        """
        model = MentorEvalReport()
        if include_optional:
            return MentorEvalReport(
                id = 56,
                mentor_eval = '',
                mentor = '',
                conversation_ratings = [
                    iblai.models.conversation_rating.ConversationRating(
                        id = 56, 
                        full_conversation_text = '', 
                        rating_text = '', 
                        score = 1.337, )
                    ],
                overall_score = 1.337,
                is_passed = True,
                generated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return MentorEvalReport(
                id = 56,
                mentor_eval = '',
                mentor = '',
                conversation_ratings = [
                    iblai.models.conversation_rating.ConversationRating(
                        id = 56, 
                        full_conversation_text = '', 
                        rating_text = '', 
                        score = 1.337, )
                    ],
                overall_score = 1.337,
                is_passed = True,
                generated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testMentorEvalReport(self):
        """Test MentorEvalReport"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
