# coding: utf-8

"""
    ibl-data-manager

    API for iblai

    The version of the OpenAPI document: 3.54.3-ai-plus
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from iblai.models.paginated_rbac_policy_list import PaginatedRbacPolicyList

class TestPaginatedRbacPolicyList(unittest.TestCase):
    """PaginatedRbacPolicyList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaginatedRbacPolicyList:
        """Test PaginatedRbacPolicyList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaginatedRbacPolicyList`
        """
        model = PaginatedRbacPolicyList()
        if include_optional:
            return PaginatedRbacPolicyList(
                count = 123,
                next = 'http://api.example.org/accounts/?page=4',
                previous = 'http://api.example.org/accounts/?page=2',
                results = [
                    iblai.models.rbac_policy.RbacPolicy(
                        id = 56, 
                        role = null, 
                        platform = null, 
                        resources = [
                            ''
                            ], 
                        users = [
                            iblai.models.rbac_user.RbacUser(
                                id = 56, 
                                username = '', )
                            ], 
                        groups = [
                            iblai.models.rbac_policy_group.RbacPolicyGroup(
                                id = 56, 
                                name = '', 
                                unique_id = '', 
                                description = '', )
                            ], 
                        role_id = 56, 
                        platform_key = '', 
                        users_to_add = [
                            56
                            ], 
                        users_to_remove = [
                            56
                            ], 
                        groups_to_add = [
                            56
                            ], 
                        groups_to_remove = [
                            56
                            ], )
                    ]
            )
        else:
            return PaginatedRbacPolicyList(
                count = 123,
                results = [
                    iblai.models.rbac_policy.RbacPolicy(
                        id = 56, 
                        role = null, 
                        platform = null, 
                        resources = [
                            ''
                            ], 
                        users = [
                            iblai.models.rbac_user.RbacUser(
                                id = 56, 
                                username = '', )
                            ], 
                        groups = [
                            iblai.models.rbac_policy_group.RbacPolicyGroup(
                                id = 56, 
                                name = '', 
                                unique_id = '', 
                                description = '', )
                            ], 
                        role_id = 56, 
                        platform_key = '', 
                        users_to_add = [
                            56
                            ], 
                        users_to_remove = [
                            56
                            ], 
                        groups_to_add = [
                            56
                            ], 
                        groups_to_remove = [
                            56
                            ], )
                    ],
        )
        """

    def testPaginatedRbacPolicyList(self):
        """Test PaginatedRbacPolicyList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
