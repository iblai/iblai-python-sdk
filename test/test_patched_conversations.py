# coding: utf-8

"""
    ibl-data-manager

    API for iblai

    The version of the OpenAPI document: 3.54.3-ai-plus
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from iblai.models.patched_conversations import PatchedConversations

class TestPatchedConversations(unittest.TestCase):
    """PatchedConversations unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PatchedConversations:
        """Test PatchedConversations
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PatchedConversations`
        """
        model = PatchedConversations()
        if include_optional:
            return PatchedConversations(
                id = '',
                messages = '',
                topics = [
                    iblai.models.topic_model.TopicModel(
                        name = '', )
                    ],
                sentiment = '',
                mentor = '',
                student = '',
                email = '',
                model = '',
                rating = 56,
                platform = '',
                lti_email = '',
                lti_username = '',
                inserted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                has_document = True,
                memory_tracked = True,
                llm_name = '',
                llm_provider = '',
                metadata = None,
                tools = [
                    56
                    ]
            )
        else:
            return PatchedConversations(
        )
        """

    def testPatchedConversations(self):
        """Test PatchedConversations"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
