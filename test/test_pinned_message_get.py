# coding: utf-8

"""
    ibl-data-manager

    API for iblai

    The version of the OpenAPI document: 3.54.3-ai-plus
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from iblai.models.pinned_message_get import PinnedMessageGet

class TestPinnedMessageGet(unittest.TestCase):
    """PinnedMessageGet unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PinnedMessageGet:
        """Test PinnedMessageGet
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PinnedMessageGet`
        """
        model = PinnedMessageGet()
        if include_optional:
            return PinnedMessageGet(
                session_id = '',
                mentor = iblai.models.mentor.Mentor(
                    name = '', 
                    unique_id = '', 
                    flow = null, 
                    slug = 'z', 
                    platform = '', 
                    allow_anonymous = True, 
                    metadata = null, 
                    enable_moderation = True, 
                    enable_post_processing_system = True, 
                    enable_openai_assistant = True, 
                    enable_total_grounding = True, 
                    enable_suggested_prompts = True, 
                    enable_guided_prompts = True, 
                    guided_prompt_instructions = '', 
                    google_voice = 56, 
                    openai_voice = 56, 
                    categories = [
                        iblai.models.mentor_category.MentorCategory(
                            id = 56, 
                            name = '', 
                            description = '', 
                            category_group = 56, 
                            audience = iblai.models.mentor_audience.MentorAudience(
                                id = 56, 
                                name = '', 
                                description = '', ), 
                            audiences = [
                                iblai.models.mentor_audience.MentorAudience(
                                    id = 56, 
                                    name = '', 
                                    description = '', )
                                ], )
                        ], 
                    proactive_prompt = '', 
                    moderation_system_prompt = '', 
                    post_processing_prompt = '', 
                    moderation_response = '', 
                    safety_system_prompt = '', 
                    safety_response = '', 
                    enable_safety_system = True, 
                    proactive_response = '', 
                    greeting_method = null, 
                    call_configuration = iblai.models.call_configuration.CallConfiguration(
                        id = 56, 
                        mentor = 56, 
                        mode = 'realtime', 
                        tts_provider = 'openai', 
                        stt_provider = 'openai', 
                        llm_provider = 'openai', 
                        use_function_calling_for_rag = True, 
                        google_voice = iblai.models.voice.Voice(
                            id = 56, 
                            name = '', 
                            provider = 'openai', 
                            language = '', 
                            description = '', 
                            audio_url = '', ), 
                        openai_voice = iblai.models.voice.Voice(
                            id = 56, 
                            name = '', 
                            provider = 'openai', 
                            language = '', 
                            description = '', 
                            audio_url = '', ), 
                        openai_voice_id = 56, 
                        google_voice_id = 56, 
                        enable_video = True, 
                        platform_key = '', ), 
                    mcp_servers = [
                        iblai.models.mcp_server.MCPServer(
                            id = 56, 
                            platform = 56, 
                            name = '', 
                            url = '', 
                            transport = 'sse', 
                            headers = null, 
                            platform_key = '', 
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], 
                    last_accessed_by = 56, 
                    recently_accessed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    created_by = '', 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                messages = [
                    iblai.models.chat_history.ChatHistory(
                        id = 56, 
                        message = null, 
                        inserted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        title = '', 
                        feedback = null, 
                        document_sources = null, )
                    ]
            )
        else:
            return PinnedMessageGet(
                session_id = '',
                mentor = iblai.models.mentor.Mentor(
                    name = '', 
                    unique_id = '', 
                    flow = null, 
                    slug = 'z', 
                    platform = '', 
                    allow_anonymous = True, 
                    metadata = null, 
                    enable_moderation = True, 
                    enable_post_processing_system = True, 
                    enable_openai_assistant = True, 
                    enable_total_grounding = True, 
                    enable_suggested_prompts = True, 
                    enable_guided_prompts = True, 
                    guided_prompt_instructions = '', 
                    google_voice = 56, 
                    openai_voice = 56, 
                    categories = [
                        iblai.models.mentor_category.MentorCategory(
                            id = 56, 
                            name = '', 
                            description = '', 
                            category_group = 56, 
                            audience = iblai.models.mentor_audience.MentorAudience(
                                id = 56, 
                                name = '', 
                                description = '', ), 
                            audiences = [
                                iblai.models.mentor_audience.MentorAudience(
                                    id = 56, 
                                    name = '', 
                                    description = '', )
                                ], )
                        ], 
                    proactive_prompt = '', 
                    moderation_system_prompt = '', 
                    post_processing_prompt = '', 
                    moderation_response = '', 
                    safety_system_prompt = '', 
                    safety_response = '', 
                    enable_safety_system = True, 
                    proactive_response = '', 
                    greeting_method = null, 
                    call_configuration = iblai.models.call_configuration.CallConfiguration(
                        id = 56, 
                        mentor = 56, 
                        mode = 'realtime', 
                        tts_provider = 'openai', 
                        stt_provider = 'openai', 
                        llm_provider = 'openai', 
                        use_function_calling_for_rag = True, 
                        google_voice = iblai.models.voice.Voice(
                            id = 56, 
                            name = '', 
                            provider = 'openai', 
                            language = '', 
                            description = '', 
                            audio_url = '', ), 
                        openai_voice = iblai.models.voice.Voice(
                            id = 56, 
                            name = '', 
                            provider = 'openai', 
                            language = '', 
                            description = '', 
                            audio_url = '', ), 
                        openai_voice_id = 56, 
                        google_voice_id = 56, 
                        enable_video = True, 
                        platform_key = '', ), 
                    mcp_servers = [
                        iblai.models.mcp_server.MCPServer(
                            id = 56, 
                            platform = 56, 
                            name = '', 
                            url = '', 
                            transport = 'sse', 
                            headers = null, 
                            platform_key = '', 
                            created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], 
                    last_accessed_by = 56, 
                    recently_accessed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    created_by = '', 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                messages = [
                    iblai.models.chat_history.ChatHistory(
                        id = 56, 
                        message = null, 
                        inserted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        title = '', 
                        feedback = null, 
                        document_sources = null, )
                    ],
        )
        """

    def testPinnedMessageGet(self):
        """Test PinnedMessageGet"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
